package legend.compiletime.statement;

import legend.compiletime.Compiler;
import legend.compiletime.expression.Expression;
import legend.runtime.instruction.Instruction;

import java.util.List;

/**
 * Represents a parsed statement generated by the {@link StatementType#parse} method.
 */
public class Statement {

    public final StatementType TYPE;
    public final Expression EXPRESSION;
    public final String STRING;

    public Statement(StatementType type) {
        this(type, null, null);
    }

    public Statement(StatementType type, String string) {
        this(type, null, string);
    }

    public Statement(StatementType type, Expression expression) {
        this(type, expression, null);
    }

    public Statement(StatementType type, Expression expression, String string) {
        this.TYPE = type;
        this.EXPRESSION = expression;
        this.STRING = string;
    }

    /**
     * Compile this statement to runtime instructions, as defined by the {@link StatementType#compile} method.
     * @param compiler the compiler object to use for compiling multiline statements (e.g. control structures)
     * @return the corresponding instructions
     * @see StatementType#compile
     */
    public List<Instruction> compile(Compiler compiler) {
        return TYPE.compile(this, compiler);
    }

}
